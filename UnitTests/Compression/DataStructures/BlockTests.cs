using System;
using System.IO;
using Compression.Algorithms;
using Compression.DataStructures;
using Compression.FileHandling;
using ErrorHandling.Exceptions;
using UnitTests.Compression.FileHandling;
using Xunit;

namespace UnitTests.Compression.DataStructures
{
    public sealed class BlockTests
    {
        private static readonly byte[] ExpectedDecompressedBytes;
        private static readonly int NumExpectedUncompressedBytes;
        private static readonly Zstandard Zstd = new Zstandard(1);

        static BlockTests()
        {
            const string polyPhenBase64 = "";

            ExpectedDecompressedBytes    = Convert.FromBase64String(polyPhenBase64);
            NumExpectedUncompressedBytes = ExpectedDecompressedBytes.Length;
        }

        private static MemoryStream GetBlockStream(ICompressionAlgorithm compressionAlgorithm, byte[] bytes, int numBytes, out int copyLength)
        {
            var ms = new MemoryStream();
            var writeBlock = new Block(compressionAlgorithm);

            copyLength = writeBlock.CopyTo(bytes, 0, numBytes);
            writeBlock.Write(ms);
            writeBlock.WriteEof(ms);

            return ms;
        }

        [Fact]
        public void QuickLzBlock()
        {
            var ms = GetBlockStream(Zstd, ExpectedDecompressedBytes, NumExpectedUncompressedBytes, out var copyLength);
            ms.Seek(0, SeekOrigin.Begin);

            var readBlock = new Block(Zstd);
            readBlock.Read(ms);

            var observedDecompressedBytes = new byte[NumExpectedUncompressedBytes];
            var numObservedDecompressedBytes = readBlock.CopyFrom(observedDecompressedBytes, 0, copyLength);

            Assert.False(readBlock.IsFull);
            Assert.False(readBlock.HasMoreData);
            Assert.Equal(NumExpectedUncompressedBytes, numObservedDecompressedBytes);
            Assert.Equal(ExpectedDecompressedBytes, observedDecompressedBytes);
        }

        [Fact]
        public void BlockZeroLengthCopy()
        {
            var writeBlock = new Block(Zstd);
            const int expectedCopyLength = 0;

            Assert.Equal(expectedCopyLength, writeBlock.CopyTo(ExpectedDecompressedBytes, 0, 0));
            Assert.Equal(expectedCopyLength, writeBlock.CopyFrom(ExpectedDecompressedBytes, 0, 0));
        }

        [Fact]
        public void BlockWrongSize()
        {
            var ms = GetBlockStream(Zstd, ExpectedDecompressedBytes, NumExpectedUncompressedBytes, out _);
            ms.Seek(0, SeekOrigin.Begin);

            var readBlock = new Block(Zstd);

            using (var updatedMs = new MemoryStream())
            {
                updatedMs.Write(ms.ToArray(), 0, (int)ms.Length);
                updatedMs.Seek(0, SeekOrigin.Begin);

                // read the original header
                var header = new BlockHeader();
                header.Read(updatedMs);

                // change and write the header
                header.NumUncompressedBytes--;
                updatedMs.Seek(0, SeekOrigin.Begin);
                header.Write(updatedMs);

                // read the updated block
                updatedMs.Seek(0, SeekOrigin.Begin);
                // ReSharper disable once AccessToDisposedClosure
                Assert.Throws<CompressionException>(delegate { readBlock.Read(updatedMs); });
            }
        }

        [Fact]
        public void BlockTruncation()
        {
            var ms = GetBlockStream(Zstd, ExpectedDecompressedBytes, NumExpectedUncompressedBytes, out _);
            ms.Seek(0, SeekOrigin.Begin);

            var readBlock = new Block(Zstd);

            using (var truncatedMs = new MemoryStream())
            {
                truncatedMs.Write(ms.ToArray(), 0, (int)ms.Length - 100);
                truncatedMs.Seek(0, SeekOrigin.Begin);
                // ReSharper disable once AccessToDisposedClosure
                Assert.Throws<IOException>(delegate { readBlock.Read(truncatedMs); });
            }
        }

        [Fact]
        public void UncompressedBlockTruncation()
        {
            const int bufferSize = 10000;
            var buffer = BlockStreamTests.GetRandomBytes(bufferSize);

            var ms = GetBlockStream(Zstd, buffer, bufferSize, out _);
            ms.Seek(0, SeekOrigin.Begin);

            var readBlock = new Block(Zstd);

            using (var truncatedMs = new MemoryStream())
            {
                truncatedMs.Write(ms.ToArray(), 0, (int)ms.Length - 100);
                truncatedMs.Seek(0, SeekOrigin.Begin);
                // ReSharper disable once AccessToDisposedClosure
                Assert.Throws<IOException>(delegate { readBlock.Read(truncatedMs); });
            }
        }
    }
}
